<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.edurekademo.tutorial</groupId>
    <artifactId>demoRepo</artifactId>
    <version>1.1.1-SNAPSHOT</version><!--test-->
    <packaging>pom</packaging>
    <name>Edureka Project 2 </name>
    <url>https://github.com/kigrads/demoRepo</url>
    <properties>
        <build.number>SNAPSHOT</build.number>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <easyb.version>1.4</easyb.version>
        <cobertura.version>2.6</cobertura.version>
        <!-- A workaround for a bug in PMD -->
        <sourceJdk>1.8</sourceJdk>
        <targetJdk>1.8</targetJdk>
        <github.account>kigrads</github.account>
        <thucydides.version>0.9.268</thucydides.version>
        <jelastic.context>demoRepo</jelastic.context>
    </properties>

	<distributionManagement>
		<snapshotRepository>
			<id>${env.ART_ID}</id>
			<name>${env.ART_NAME}</name>
			<url>${env.ART_URL}</url>
		</snapshotRepository>
		<repository>
		<id>${env.REL_ART_ID}</id>
			<name>${env.REL_ART_NAME}</name>
			<url>${env.REL_ART_URL}</url>
		</repository>

	</distributionManagement>
	
	    <scm>
        <connection>scm:git:git@github.com:${github.account}/demoRepo.git</connection>
        <developerConnection>scm:git:git@github.com:${github.account}/demoRepo.git</developerConnection>
        <url>scm:git:git@github.com:${github.account}/game-of-life.git</url>
      <!-- <tag>1.0.5</tag> --> 
    <tag>HEAD</tag>
  </scm>

    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
		 <pluginRepository>
        <id>apache.snapshots</id>
        <name>Apache Snapshots</name>
        <url>http://repository.apache.org/content/groups/snapshots-group/</url>
        <releases>
            <enabled>false</enabled>
        </releases>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </pluginRepository>
	<pluginRepository>
        <id>apache.public</id>
        <name>Apache public</name>
        <url>http://repository.apache.org/content/groups/public</url>
        <releases>
            <enabled>true</enabled>
        </releases>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </pluginRepository>
    </pluginRepositories>

<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			
			<!-- Plugin to execute command "npm install" and "npm run build" inside 
				/src/main/javascript directory -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				
				<executions>
					<!-- It will install nodejs and npm -->
					 <execution> 
						 <id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v10.14.1</nodeVersion>
							<npmVersion>3.10.10</npmVersion>
						</configuration>
					</execution>
					<!-- It will execute command "npm install" inside "/src/main/javascript" 
						directory -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<!-- It will execute command "npm build" inside "/src/main/javascript" 
						directory to clean and create "/dist" directory -->
					 <execution>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<id>default-copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
